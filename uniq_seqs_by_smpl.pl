#!/usr/bin/perl
# uniq_seqs_by_smpl.pl
use strict; use warnings;
use Getopt::Long;

# Use this script to count unique sequences in a FASTA file that contains sequences from multiple samples.
# The sample names should be appended to the end of the header generated by sequencing,
# otherwise, the script will have to be modified below to match the sample naming scheme.

my $usage = "\n\tuniq_seqs_by_smpl.pl [-h -o <output PATH>] -i <input FASTA>\n\n";

# defaults
my $help;
my $outdir = './';
my $infile;

GetOptions (
	'help!' => \$help,
	'o=s'   => \$outdir,
	'i=s'   => \$infile,
) or die $usage;

if ($outdir !~ /\/$/) {$outdir = "$outdir\/"}
die unless $help or $infile;

if ($help) {
	print $usage;
	print "\t\tUse this script to count unique sequences in a FASTA file that contains sequences from multiple samples.\n";
	print "\t\tThe sample names should be appended to the end of the header generated by sequencing,\n";
	print "\t\totherwise, the script will have to be modified below to match the sample naming scheme.\n\n";
}
else {
	# global variables
	my ($filename) = $infile =~ /^(\S+)\.fa$/;
	my %seqs_by_smpl;

	open INF, "<$infile" or die "\n\tError: cannot open $infile\n\n";

	while (<INF>) {
		if ($_ =~ /^\>/) {
			my $hdr = $_;
			chomp $hdr;
			# my ($smpl) = $hdr =~ /^\>HWI\-\w+:\d+:[\d\w\-]+:\d+:\d+:\d+:\d+:(\S+)$/;
			my ($smpl) = $hdr =~ /:([mp]\w{3,4}-*N*A*):/;
			# print "$smpl\n";
			my $seq = <INF>;
			chomp $seq;
			push @{$seqs_by_smpl{$smpl}}, $seq;
		}
	}
	close INF;

	open OUT, ">${outdir}$filename.uniq.fa" or die "\n\tError: cannot create ${outdir}$filename.uniq.fa\n\n";
	open STA, ">${outdir}$filename.uniq_stats.txt" or die "\n\tError: cannot create ${outdir}$filename.uniq_stats.txt\n\n";
	print STA "smpl\tuniq.seq.id\tabund\n";

	my @smpls = sort keys %seqs_by_smpl;

	foreach my $smpl (@smpls) {
		my %seq_ct;

		foreach my $seq (@{$seqs_by_smpl{$smpl}}) {
			$seq_ct{$seq}++;
		}

		my @uniq_seqs = sort {$seq_ct{$b} <=> $seq_ct{$a}} keys %seq_ct;
		my $uniq_ct = 1;

		foreach my $uniq_seq (@uniq_seqs) {
			print OUT "\>$uniq_ct:$smpl:$seq_ct{$uniq_seq}\n$uniq_seq\n";
			print STA "$smpl\t$uniq_ct\t$seq_ct{$uniq_seq}\n";
			$uniq_ct++;
		}
	}
	close OUT; close STA;
}